{"version":3,"sources":["Components/Image/Image.js","Components/Map/Map.js","Components/ImageGallery/ImageGallery.js","App.js","serviceWorker.js","index.js"],"names":["Image","getImage","bind","formattedSize","Math","round","this","props","size","gpsData","undefined","long","getFormattedCoord","coord","numerator","denominator","formattedLongitude","toFixed","formattedLatitude","lat","lang","latitude","longitude","formatCoords","className","src","file","alt","name","id","onLoad","imgLoaded","fileName","gps","kb","onClick","imgDeleted","delete","React","Component","mapStyles","margin","padding","width","height","MapContainer","google","zoom","style","initialCenter","lng","GoogleApiWrapper","apiKey","ImageGallery","state","images","nextId","fileInputChangedHandler","displayImages","imageDeletedHandler","imageLoadedHandler","event","target","files","length","type","alert","fileTypeNotSupported","fileSizeNotSupported","setState","URL","createObjectURL","currentNextId","filteredImages","filter","img","component","EXIF","getData","getTag","loadedImageId","Number","foundedIndex","findIndex","image","currentImages","foundedImage","map","key","imgGallery","accept","onChange","data-title","chooseFile","Map","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf163151.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Image.css';\r\nimport lang from '../../assets/lang/lang.json';\r\n\r\nclass Image extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.getImage = this.getImage.bind(this);\t\r\n\t}\r\n\r\n  getImage() {\r\n\t\tlet formattedSize = Math.round(this.props.size / 1024);\r\n\r\n\t\tlet formatCoords = () => {\r\n\t\t\tlet getFormattedCoord = (coord) => {\r\n\t\t\t\treturn coord[0].numerator + coord[1].numerator /\r\n\t\t\t\t\t\t(60 * coord[1].denominator) + coord[2].numerator / (3600 * coord[2].denominator);\r\n\t\t\t}\r\n\r\n\t\t\tlet formattedLongitude = getFormattedCoord(this.props.long).toFixed(6);\r\n\t\t\tlet formattedLatitude = getFormattedCoord(this.props.lat).toFixed(6);\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p> {lang.latitude} {formattedLatitude} </p>\r\n\t\t\t\t\t<p> {lang.longitude} {formattedLongitude} </p>\r\n\t\t\t\t</>\t\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tlet gpsData = this.props.long !== undefined ? formatCoords() : <p>Data not available</p>;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"item-container\">\r\n\t\t\t\t\t<img src={this.props.file} alt={this.props.name} id={this.props.id} onLoad={this.props.imgLoaded}/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>{lang.fileName}</p> \r\n\t\t\t\t\t\t<p>{this.props.name} </p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>{lang.gps}</p>\r\n\t\t\t\t\t\t{gpsData}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<p>{lang.size}</p> \r\n\t\t\t\t\t\t<p>{formattedSize} {lang.kb} </p> \r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"btn btn-delete\" onClick={this.props.imgDeleted}> {lang.delete} </button>\r\n\t\t\t</div>\r\n\t\t\t)\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\tthis.getImage()\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Image;","import React from 'react';\r\nimport { Map, GoogleApiWrapper  } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  margin: '0% -40%',\r\n  padding: '0',\r\n  width: '80vw',\r\n  height: '40vw',\r\n};\r\n\r\nexport class MapContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={14}\r\n        style={mapStyles}\r\n        initialCenter={{\r\n         lat: 52.235639,\r\n         lng: 20.998219\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyCkLxd__RKjujuKU7AI7ixqLk9wuI8t7VQ'\r\n})(MapContainer);","import React from 'react';\r\nimport './ImageGallery.css';\r\nimport Image from '../Image/Image';\r\nimport EXIF from '../../../node_modules/exif-js';\r\nimport lang from '../../assets/lang/lang.json';\r\nimport Map from '../Map/Map';\r\n\r\nclass ImageGallery extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\timages: [],\r\n\t\t\tnextId: 1\r\n\t\t}\r\n\r\n\t\tthis.fileInputChangedHandler = this.fileInputChangedHandler.bind(this);\r\n\t\tthis.displayImages = this.displayImages.bind(this);\r\n\t\tthis.imageDeletedHandler = this.imageDeletedHandler.bind(this);\r\n\t\tthis.imageLoadedHandler = this.imageLoadedHandler.bind(this);\r\n\t}\r\n  \r\n\tfileInputChangedHandler(event) {\r\n\t\tif (event.target.files.length > 0) {\r\n\t\t\tif (event.target.files[0].type !== \"image/jpeg\") {\r\n\t\t\t\talert(lang.fileTypeNotSupported);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (event.target.files[0].size > 1024*1024) {\r\n\t\t\t\talert(lang.fileSizeNotSupported);\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({ \r\n\t\t\t\timages: [ ...this.state.images, \r\n\t\t\t\t{ file: URL.createObjectURL(event.target.files[0]), \r\n\t\t\t\t\tname: event.target.files[0].name,\r\n\t\t\t\t\tsize: event.target.files[0].size,\r\n\t\t\t\t\ttype: event.target.files[0].type,\r\n\t\t\t\t\tid: this.state.nextId}] }\r\n\t\t\t);\r\n\t\t\tlet currentNextId = this.state.nextId;\r\n\t\t\tthis.setState({nextId: ++currentNextId});\r\n\t\t}\r\n\t}\r\n \r\n\timageDeletedHandler(id) {\r\n\t\tlet filteredImages = this.state.images.filter( (img) => {return img.id !== id});\r\n\t\tthis.setState({images: filteredImages});\r\n\t}\r\n \r\n\timageLoadedHandler(event) {\r\n\t\tlet component = this;\r\n\t\t\r\n\t\tEXIF.getData(event.target, function() {\r\n\t\t\tlet long = EXIF.getTag(this, 'GPSLongitude');\r\n\t\t\tlet lat = EXIF.getTag(this, 'GPSLatitude');\r\n\t\t\t\r\n\t\t\tlet loadedImageId = Number(this.id);\r\n\t\t\tlet foundedIndex = component.state.images.findIndex((image) => { return image.id === loadedImageId}); \r\n\t\t\t\r\n\t\t\tlet currentImages = component.state.images;\r\n\t\t\tlet foundedImage = currentImages[foundedIndex];\r\n\t\t\tfoundedImage.longitude = long;\r\n\t\t\tfoundedImage.latitude = lat;\r\n\r\n\t\t\tcomponent.setState({\r\n\t\t\t\timages: currentImages});\r\n\t\t})\r\n\t};\r\n\r\n\tdisplayImages() {\r\n\t\tif (this.state.images.length > 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"images-container\">\r\n\t\t\t\t\t{this.state.images.map( (image) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"list-item\" key={image.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Image \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfile={image.file} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={image.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={image.type}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsize={image.size}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid={image.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlong={image.longitude}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlat={image.latitude}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timgDeleted={this.imageDeletedHandler.bind(this, image.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\timgLoaded={this.imageLoadedHandler}/> \r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t) \r\n\t\t} \r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"main-cointainer\">\r\n\t\t\t\t<h1>{lang.imgGallery}</h1>\r\n\t\t\t\t<input type=\"file\" \r\n\t\t\t\t\tclassName=\"upload-form\" \r\n\t\t\t\t\taccept=\"image/jpeg\"\r\n\t\t\t\t\tonChange={this.fileInputChangedHandler}\r\n\t\t\t\t\tdata-title={lang.chooseFile} \r\n\t\t\t\t\t/>\r\n\t\t\t\t{this.displayImages()}\r\n\t\t\t\t<Map />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\nimport './App.css';\nimport ImageGallery from './Components/ImageGallery/ImageGallery';\n\nfunction App() {\n  return (\n    <div className=\"total-container\">\n      <ImageGallery />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}